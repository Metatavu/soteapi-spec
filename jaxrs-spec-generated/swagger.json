{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "SOTE API",
    "description" : "SOTE API",
    "version" : "0.0.1"
  },
  "servers" : [ {
    "url" : "/v1"
  } ],
  "paths" : {
    "/contents" : {
      "get" : {
        "tags" : [ "Contents" ],
        "summary" : "Lists contents",
        "description" : "Lists contents\n",
        "operationId" : "listContents",
        "parameters" : [ {
          "name" : "parentId",
          "in" : "query",
          "description" : "Filter results by parent id",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Filter results by content type",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "categorySlug",
          "in" : "query",
          "description" : "Filter by category slug",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of contents",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Content"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/contents/{contentId}" : {
      "get" : {
        "tags" : [ "Contents" ],
        "summary" : "Finds content",
        "description" : "Finds single content\n",
        "operationId" : "findContent",
        "parameters" : [ {
          "name" : "contentId",
          "in" : "path",
          "description" : "content id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single content",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Content"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/contents/{contentId}/images" : {
      "get" : {
        "tags" : [ "Contents" ],
        "summary" : "Returns a list of content images",
        "description" : "Returns a list of content images\n",
        "operationId" : "listContentImages",
        "parameters" : [ {
          "name" : "contentId",
          "in" : "path",
          "description" : "Content id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Filter by type",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns list of content images",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ContentImage"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/contents/{contentId}/images/{imageId}" : {
      "get" : {
        "tags" : [ "Contents" ],
        "summary" : "Returns a single content image",
        "description" : "Returns a single content image\n",
        "operationId" : "findContentImage",
        "parameters" : [ {
          "name" : "contentId",
          "in" : "path",
          "description" : "Content Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Content image id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an content image",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentImage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/contents/{contentId}/images/{imageId}/data" : {
      "get" : {
        "tags" : [ "Contents" ],
        "summary" : "Returns an content image data",
        "description" : "Returns an content image data\n",
        "operationId" : "getContentImageData",
        "parameters" : [ {
          "name" : "contentId",
          "in" : "path",
          "description" : "Content id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Content image id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Maximum width or height of image",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an content image data",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/categories" : {
      "get" : {
        "tags" : [ "Categories" ],
        "summary" : "Lists categories",
        "description" : "Lists categories\n",
        "operationId" : "listCategories",
        "parameters" : [ {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of categories",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/events" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Lists events",
        "description" : "Lists events\n",
        "operationId" : "listEvents",
        "parameters" : [ {
          "name" : "endsAfter",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startsBefore",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "categorySlug",
          "in" : "query",
          "description" : "Filter by category slug",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of events",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Event"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/events/{eventId}" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Finds event",
        "description" : "Finds single event\n",
        "operationId" : "findEvent",
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "description" : "event id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single event",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/emergencyCongestionStatuses" : {
      "get" : {
        "tags" : [ "EmergencyCongestionStatuses" ],
        "summary" : "Lists emergency congestion statuses",
        "description" : "List of emergency congestion statuses",
        "operationId" : "listEmergencyCongestionStatuses",
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort results. See EmergencyCongestionStatusListSort for sort options",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a lists emergency congestion statuses",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EmergencyCongestionStatus"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/reviewProducts" : {
      "get" : {
        "tags" : [ "ReviewProducts" ],
        "summary" : "Lists reviewProducts",
        "description" : "Lists reviewProducts\n",
        "operationId" : "listReviewProducts",
        "responses" : {
          "200" : {
            "description" : "Returns a list of reviewProducts",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ReviewProduct"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/reviewProducts/{reviewProductId}" : {
      "get" : {
        "tags" : [ "ReviewProducts" ],
        "summary" : "Finds reviewProduct",
        "description" : "Finds single reviewProduct\n",
        "operationId" : "findReviewProduct",
        "parameters" : [ {
          "name" : "reviewProductId",
          "in" : "path",
          "description" : "reviewProduct id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single reviewProduct",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewProduct"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/reviews" : {
      "get" : {
        "tags" : [ "Reviews" ],
        "summary" : "Lists reviews",
        "description" : "Lists reviews\n",
        "operationId" : "listReviews",
        "parameters" : [ {
          "name" : "productId",
          "in" : "query",
          "description" : "product id",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "minRating",
          "in" : "query",
          "description" : "min rating",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "maxRating",
          "in" : "query",
          "description" : "max rating",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/ReviewListSort"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of reviews",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Review"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/reviews/{reviewId}" : {
      "get" : {
        "tags" : [ "Reviews" ],
        "summary" : "Finds review",
        "description" : "Finds single review\n",
        "operationId" : "findReview",
        "parameters" : [ {
          "name" : "reviewId",
          "in" : "path",
          "description" : "review id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single review",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Review"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/surveyQuestions" : {
      "get" : {
        "tags" : [ "SurveyQuestions" ],
        "summary" : "Lists surveyQuestions",
        "description" : "Lists surveyQuestions\n",
        "operationId" : "listSurveyQuestions",
        "responses" : {
          "200" : {
            "description" : "Returns a list of surveyQuestions",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SurveyQuestion"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/surveyQuestions/{surveyQuestionId}" : {
      "get" : {
        "tags" : [ "SurveyQuestions" ],
        "summary" : "Finds surveyQuestion",
        "description" : "Finds single surveyQuestion\n",
        "operationId" : "findSurveyQuestion",
        "parameters" : [ {
          "name" : "surveyQuestionId",
          "in" : "path",
          "description" : "surveyQuestion id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single surveyQuestion",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SurveyQuestion"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/surveyQuestions/{surveyQuestionId}/summary" : {
      "get" : {
        "tags" : [ "SurveyQuestions" ],
        "summary" : "Finds survey question summary",
        "description" : "Finds single surveyQuestion summary\n",
        "operationId" : "findSurveyQuestionSummary",
        "parameters" : [ {
          "name" : "surveyQuestionId",
          "in" : "path",
          "description" : "surveyQuestion id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single surveyQuestion",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SurveyQuestionSummary"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : {
              "application/json;charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Content" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "parentId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "level" : {
            "type" : "integer",
            "format" : "int32"
          },
          "slug" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string",
            "description" : "Category slug"
          },
          "type" : {
            "type" : "string",
            "description" : "Content type",
            "enum" : [ "PAGE", "NEWS", "LINK" ]
          },
          "title" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocalizedValue"
            }
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocalizedValue"
            }
          },
          "created" : {
            "type" : "string",
            "description" : "Create time.",
            "format" : "date-time"
          },
          "modified" : {
            "type" : "string",
            "description" : "Create time.",
            "format" : "date-time"
          }
        }
      },
      "ContentImage" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "contentType" : {
            "type" : "string"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "Event" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "slug" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string",
            "description" : "Category slug"
          },
          "title" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocalizedValue"
            }
          },
          "description" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocalizedValue"
            }
          },
          "startDate" : {
            "type" : "string",
            "description" : "Event's start date.",
            "format" : "date"
          },
          "startTime" : {
            "type" : "string",
            "description" : "Event's start time.",
            "format" : "time"
          },
          "endDate" : {
            "type" : "string",
            "description" : "Event's end date.",
            "format" : "date"
          },
          "endTime" : {
            "type" : "string",
            "description" : "Event's end time.",
            "format" : "time"
          },
          "allDay" : {
            "type" : "boolean"
          }
        }
      },
      "Category" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "slug" : {
            "type" : "string"
          },
          "title" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocalizedValue"
            }
          }
        }
      },
      "Review" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "productId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "rating" : {
            "type" : "integer",
            "format" : "int32"
          },
          "created" : {
            "type" : "string",
            "description" : "Create time.",
            "format" : "date-time"
          },
          "modified" : {
            "type" : "string",
            "description" : "Create time.",
            "format" : "date-time"
          },
          "review" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          }
        }
      },
      "SurveyQuestion" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "question" : {
            "type" : "string"
          }
        }
      },
      "SurveyQuestionSummary" : {
        "properties" : {
          "positive" : {
            "type" : "integer",
            "format" : "int64"
          },
          "negative" : {
            "type" : "integer",
            "format" : "int64"
          },
          "total" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "EmergencyCongestionStatus" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "value" : {
            "type" : "integer",
            "format" : "int32"
          },
          "created" : {
            "type" : "string",
            "description" : "Create time.",
            "format" : "date-time"
          }
        }
      },
      "LocalizedValue" : {
        "type" : "object",
        "properties" : {
          "language" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "ReviewProduct" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "link" : {
            "type" : "string"
          }
        }
      },
      "InternalServerError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "Forbidden" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "BadRequest" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "NotImplemented" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "NotFound" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "ReviewListSort" : {
        "type" : "string",
        "enum" : [ "CREATED_DESC", "CREATED_ASC" ]
      },
      "EmergencyCongestionStatusListSort" : {
        "type" : "string",
        "enum" : [ "CREATED_DESC", "CREATED_ASC" ]
      }
    }
  }
}