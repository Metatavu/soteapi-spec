{
  "swagger" : "2.0",
  "info" : {
    "description" : "SOTE API",
    "version" : "0.0.1",
    "title" : "SOTE API"
  },
  "basePath" : "/v1",
  "schemes" : [ "https" ],
  "consumes" : [ "application/json;charset=utf-8" ],
  "produces" : [ "application/json;charset=utf-8" ],
  "paths" : {
    "/contents" : {
      "get" : {
        "tags" : [ "Contents" ],
        "summary" : "Lists contents",
        "description" : "Lists contents\n",
        "operationId" : "listContents",
        "parameters" : [ {
          "name" : "parentId",
          "in" : "query",
          "description" : "Filter results by parent id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Filter results by content type",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }, {
          "name" : "categorySlug",
          "in" : "query",
          "description" : "Filter by category slug",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of contents",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Content"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/contents/{contentId}" : {
      "get" : {
        "tags" : [ "Contents" ],
        "summary" : "Finds content",
        "description" : "Finds single content\n",
        "operationId" : "findContent",
        "parameters" : [ {
          "name" : "contentId",
          "in" : "path",
          "description" : "content id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single content",
            "schema" : {
              "$ref" : "#/definitions/Content"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/contents/{contentId}/content" : {
      "get" : {
        "tags" : [ "Contents" ],
        "summary" : "Returns content content in all available languages",
        "description" : "Returns single content content in all available languages\n",
        "operationId" : "findContentData",
        "parameters" : [ {
          "name" : "contentId",
          "in" : "path",
          "description" : "content id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns single content content in all available languages",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LocalizedValue"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/contents/{contentId}/images" : {
      "get" : {
        "tags" : [ "Contents" ],
        "summary" : "Returns a list of content images",
        "description" : "Returns a list of content images\n",
        "operationId" : "listContentImages",
        "parameters" : [ {
          "name" : "contentId",
          "in" : "path",
          "description" : "Content id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Filter by type",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns list of content images",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ContentImage"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/contents/{contentId}/images/{imageId}" : {
      "get" : {
        "tags" : [ "Contents" ],
        "summary" : "Returns a single content image",
        "description" : "Returns a single content image\n",
        "operationId" : "findContentImage",
        "parameters" : [ {
          "name" : "contentId",
          "in" : "path",
          "description" : "Content Id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Content image id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an content image",
            "schema" : {
              "$ref" : "#/definitions/ContentImage"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/contents/{contentId}/images/{imageId}/data" : {
      "get" : {
        "tags" : [ "Contents" ],
        "summary" : "Returns an content image data",
        "description" : "Returns an content image data\n",
        "operationId" : "getContentImageData",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "contentId",
          "in" : "path",
          "description" : "Content id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Content image id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Maximum width or height of image",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an content image data",
            "schema" : {
              "type" : "string",
              "format" : "binary"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/categories" : {
      "get" : {
        "tags" : [ "Categories" ],
        "summary" : "Lists categories",
        "description" : "Lists categories\n",
        "operationId" : "listCategories",
        "parameters" : [ {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of categories",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Category"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "Content" : {
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "parentId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "level" : {
          "type" : "integer",
          "format" : "int32"
        },
        "slug" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string",
          "description" : "Category slug"
        },
        "type" : {
          "type" : "string",
          "description" : "Content type",
          "enum" : [ "PAGE", "NEWS", "LINK" ]
        },
        "title" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        }
      }
    },
    "ContentImage" : {
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "contentType" : {
          "type" : "string"
        },
        "size" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "Category" : {
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "slug" : {
          "type" : "string"
        },
        "title" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        }
      }
    },
    "LocalizedValue" : {
      "type" : "object",
      "properties" : {
        "language" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "InternalServerError" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "Forbidden" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "BadRequest" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "NotImplemented" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "NotFound" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    }
  }
}